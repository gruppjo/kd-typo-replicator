
html, body {
  font-size: 18px;
  width: 100%;
  height: 100%;
  margin: 0;
}
body {
  /* overflow: hidden; */
  padding: 8px;
  box-sizing: border-box;
}

h1 {
  font-size: 3rem;
}

#input-text {
  height: 4rem;
  font-size: 2rem;
  border: none;
  margin-top: .5rem;
  margin-bottom: 1rem;
}
#input-text:focus {
  outline: none;
}
.slide-container {
  width: 100%;
  cursor:pointer;
}
/* The slider itself */
.slider {
  -webkit-appearance: none;  /* Override default CSS styles */
  appearance: none;
  width: 100%; /* Full-width */
  height: 15px; /* Specified height */
  background: #eaeaea; /* Grey background */
  outline: none; /* Remove outline */
  opacity: 0.7; /* Set transparency (for mouse-over effects on hover) */
  -webkit-transition: .2s; /* 0.2 seconds transition on hover */
  transition: opacity .2s;
}

/* Mouse-over effects */
.slider:hover {
  opacity: 1; /* Fully shown on mouse-over */
}

/* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */
.slider::-webkit-slider-thumb {
  -webkit-appearance: none; /* Override default look */
  appearance: none;
  width: 15px; /* Set a specific slider handle width */
  height: 15px; /* Slider handle height */
  background: #000; /* Green background */
  cursor: pointer; /* Cursor on hover */
}

.slider::-moz-range-thumb {
  width: 15px; /* Set a specific slider handle width */
  height: 15px; /* Slider handle height */
  background: #000; /* Green background */
  cursor: pointer; /* Cursor on hover */
}

#nav-configuration {
  font-family: monospace;
}

#text-container {
  display: flex;
  flex-wrap: wrap;
}
#text-container.vertical {
  display:block;
}


/* CHARACTER */
.character {
  margin:1px;
  margin-bottom: 25px;
  min-width: 12px; /* for space character */
  min-height: 1.5rem; /* for space vertical */
  display:flex;
}

.character.q svg {
  height: calc(3rem + 5px);
}

.character svg {
  height: 3rem;
  display:block;
}

.character.vertical {
  flex-direction: column;
  align-items: flex-start; /* prevent svg from stretching to 100% */
  flex-grow: 0;
}
.character.vertical svg {
  height: 1.5rem;
}
.character.vertical-horizontal{
  flex-direction: column;
  align-items: flex-start; /* prevent svg from stretching to 100% */
  flex-grow: 0;
}
.character.vertical-horizontal svg {
  height: 1.5rem;
}

.character.vertical.no-duplicate svg {
  /* margin-top: 1.5rem; */ /* should the single vertical mirrored fragment stay on top or bottom? */
}

svg .st0 {
  fill: black !important;
  transition: fill .5s ease;
}





/* CANVAS */
#system, .system {
  width: 100%;
  height: 100%;
}
.system {
  display: flex;
  flex-direction: column;
}
h1, section {
  flex: 0;
}

#canvas, #text-container {
  width: 100%;
  flex: 1;
}
